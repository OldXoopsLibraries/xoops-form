<?php
namespace Xoops;

require_once dirname(__FILE__).'/../../init_mini.php';

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-01-20 at 15:23:12.
 */
class HttpRequestTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var HttpRequest
     */
    protected $object;
    protected $myClass = '\Xoops\HttpRequest';
    protected $save_SERVER = null;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = HttpRequest::getInstance();
        $this->save_SERVER = $_SERVER;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        $_SERVER = $this->save_SERVER;
    }

    /**
     * @covers Xoops\HttpRequest::getInstance
     * @todo   Implement testGetInstance().
     */
    public function testGetInstance()
    {

        $instance = HttpRequest::getInstance();
        $this->assertInstanceOf('\Xoops\HttpRequest', $instance);

        $this->assertSame($instance, $this->object);
    }

    /**
     * @covers Xoops\HttpRequest::getHeader
     * @todo   Implement testGetHeader().
     */
    public function testGetHeader()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Xoops\HttpRequest::getScheme
     * @todo   Implement testGetScheme().
     */
    public function testGetScheme()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Xoops\HttpRequest::getHost
     * @todo   Implement testGetHost().
     */
    public function testGetHost()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Xoops\HttpRequest::getUri
     * @todo   Implement testGetUri().
     */
    public function testGetUri()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Xoops\HttpRequest::getReferer
     * @todo   Implement testGetReferer().
     */
    public function testGetReferer()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Xoops\HttpRequest::getScriptName
     * @todo   Implement testGetScriptName().
     */
    public function testGetScriptName()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Xoops\HttpRequest::getDomain
     * @todo   Implement testGetDomain().
     */
    public function testGetDomain()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Xoops\HttpRequest::getSubdomains
     * @todo   Implement testGetSubdomains().
     */
    public function testGetSubdomains()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Xoops\HttpRequest::getClientIp
     * @todo   Implement testGetClientIp().
     */
    public function testGetClientIp()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Xoops\HttpRequest::getUrl
     * @todo   Implement testGetUrl().
     */
    public function testGetUrl()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Xoops\HttpRequest::getEnv
     */
    public function testGetEnv()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Xoops\HttpRequest::getEnv
     */
    public function test_getEnv_https()
    {
        $_SERVER['HTTPS'] = 'off';
        $x = $this->object->getEnv('HTTPS');
        $this->assertFalse($x);

        $_SERVER['HTTPS'] = 'on';
        $x = $this->object->getEnv('HTTPS');
        $this->assertTrue($x);

        $_SERVER['SCRIPT_URI'] = 'https://localhost';
        unset($_SERVER['HTTPS']);
        $x = $this->object->getEnv('HTTPS');
        $this->assertTrue($x);

        $_SERVER['SCRIPT_URI'] = 'http://localhost';
        unset($_SERVER['HTTPS']);
        $x = $this->object->getEnv('HTTPS');
        $this->assertFalse($x);

    }

    /**
     * @covers Xoops\HttpRequest::getEnv
     */
    public function test_getEnv_script_filename()
    {
        $_SERVER = array();
        $_SERVER['PATH_TRANSLATED'] = '//a///test//test.php';
        $this->assertSame('/a/test/test.php', $this->object->getEnv('SCRIPT_FILENAME'));

        $_SERVER['PATH_TRANSLATED'] = '\\a\\test\\test.php';
        $this->assertSame('\a\test\test.php', $this->object->getEnv('SCRIPT_FILENAME'));

    }

    /**
     * @covers Xoops\HttpRequest::getEnv
     */
    public function test_getEnv_document_root()
    {
        $_SERVER = array();
        $_SERVER['SCRIPT_NAME'] = 'test/filename';
        $_SERVER['SCRIPT_FILENAME'] = '/a/test/filename.php';
        $this->assertSame('/a/', $this->object->getEnv('DOCUMENT_ROOT'));

    }

    /**
     * @covers Xoops\HttpRequest::getEnv
     */
    public function test_getEnv_php_self()
    {

        $_SERVER = array();
        $_SERVER['DOCUMENT_ROOT'] = '/a/dir';
        $_SERVER['SCRIPT_FILENAME'] = '/a/dir/test/filename.php';
        $this->assertSame('/test/filename.php', $this->object->getEnv('PHP_SELF'));

    }

    /**
     * @covers Xoops\HttpRequest::getEnv
     */
    public function test_getEnv_cgi_mode()
    {
        $b = (PHP_SAPI === 'cgi');
        $this->assertSame($b, $this->object->getEnv('CGI_MODE'));
    }

    /**
     * @covers Xoops\HttpRequest::getEnv
     */
    public function test_getEnv_http_base()
    {

        $_SERVER['HTTP_HOST'] = 'localhost';
        unset($_SERVER['HTTP_BASE']);
        $this->assertSame('.localhost', $this->object->getEnv('HTTP_BASE'));

        $_SERVER['HTTP_HOST'] = 'com.ar'; // invalid - only a public prefix
        unset($_SERVER['HTTP_BASE']);
        $this->assertSame('invalid', $this->object->getEnv('HTTP_BASE', 'invalid'));
        $this->assertNull($this->object->getEnv('HTTP_BASE'));

        $_SERVER['HTTP_HOST'] = 'example.ar';
        unset($_SERVER['HTTP_BASE']);
        $this->assertSame('.example.ar', $this->object->getEnv('HTTP_BASE'));

        $_SERVER['HTTP_HOST'] = 'example.com';
        unset($_SERVER['HTTP_BASE']);
        $this->assertSame('.example.com', $this->object->getEnv('HTTP_BASE'));

        $_SERVER['HTTP_HOST'] = 'www.example.com';
        unset($_SERVER['HTTP_BASE']);
        $this->assertSame('.example.com', $this->object->getEnv('HTTP_BASE'));

        $_SERVER['HTTP_HOST'] = 'subdomain.example.com';
        unset($_SERVER['HTTP_BASE']);
        $this->assertSame('.example.com', $this->object->getEnv('HTTP_BASE'));

        $_SERVER['HTTP_HOST'] = 'example.com.ar';
        unset($_SERVER['HTTP_BASE']);
        $this->assertSame('.example.com.ar', $this->object->getEnv('HTTP_BASE'));

        $_SERVER['HTTP_HOST'] = 'www.example.com.ar';
        unset($_SERVER['HTTP_BASE']);
        $this->assertSame('.example.com.ar', $this->object->getEnv('HTTP_BASE'));

        $_SERVER['HTTP_HOST'] = 'subdomain.example.com.ar';
        unset($_SERVER['HTTP_BASE']);
        $this->assertSame('.example.com.ar', $this->object->getEnv('HTTP_BASE'));

        $_SERVER['HTTP_HOST'] = 'double.subdomain.example.com';
        unset($_SERVER['HTTP_BASE']);
        $this->assertSame('.example.com', $this->object->getEnv('HTTP_BASE'));

        $_SERVER['HTTP_HOST'] = 'double.subdomain.example.com.ar';
        unset($_SERVER['HTTP_BASE']);
        $this->assertSame('.example.com.ar', $this->object->getEnv('HTTP_BASE'));

        $_SERVER['HTTP_HOST'] = '中国化工集团公司.公司';
        unset($_SERVER['HTTP_BASE']);
        $this->assertSame('.中国化工集团公司.公司', $this->object->getEnv('HTTP_BASE'));

    }

    /**
     * @covers Xoops\HttpRequest::getFiles
     * @todo   Implement testGetFiles().
     */
    public function testGetFiles()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Xoops\HttpRequest::is
     * @todo   Implement testIs().
     */
    public function testIs()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Xoops\HttpRequest::addDetector
     * @todo   Implement testAddDetector().
     */
    public function testAddDetector()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Xoops\HttpRequest::accepts
     * @todo   Implement testAccepts().
     */
    public function testAccepts()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }
}
